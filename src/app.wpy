<style lang="less">
.container {
  height: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: space-between;
  box-sizing: border-box;
}
</style>

<script>
import wepy from 'wepy'
// import 'wepy-async-function'

export default class extends wepy.app {
  config = {
<<<<<<< HEAD
    pages: ['pages/result/result', 'pages/detail/detail', 'pages/seat/seat', 'pages/self/self', 'pages/result/result'],
=======
<<<<<<< HEAD
    pages: ['pages/detail/detail', 'pages/index/index'],
=======
    pages: ['pages/index/index', 'pages/detail/detail', 'pages/seat/seat', 'pages/self/self', 'pages/result/result'],
>>>>>>> 515d31bd489eef71e42fa4bd04ab1784aedd7ca3
    tabBar: {
      'items': [{
        'pagePath': 'pages/index/index',
        'name': '首页'
      }, {
        'pagePath': 'pages/seat/seat',
        'name': '选座'
      }, {
        'pagePath': 'pages/self/self',
        'name': '我的'
      }]
    },
>>>>>>> 75b8b630c926a2a8240c5f54f5657bff3d4b2bfd
    window: {
      backgroundTextStyle: 'light',
      navigationBarBackgroundColor: '#fff',
      navigationBarTitleText: 'WeChat',
      navigationBarTextStyle: 'black'
    }
  };

  globalData = {
    userInfo: null
  };

  constructor() {
    super()
    this.use('requestfix')
    this.use('promisify')
  }

  onLaunch() {
    this.testAsync()
  }

  sleep(s) {
    return new Promise((resolve, reject) => {
      setTimeout(() => {
        resolve('promise resolved')
      }, s * 1000)
    })
  }

  async testAsync() {
    const data = await this.sleep(3)
    console.log(data)
  }

  getUserInfo(cb) {
    const that = this
    if (this.globalData.userInfo) {
      return this.globalData.userInfo
    }
    wepy.getUserInfo({
      success(res) {
        that.globalData.userInfo = res.userInfo
        cb && cb(res.userInfo)
      }
    })
  }
}
</script>
