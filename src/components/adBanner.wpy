<template lang="wxml">
    <view class="c-banner-wrap" >
      <image class="img" mode="widthFix" @tap="goBnner" src="{{bannerInfo[0].img_url}}"  wx:if="{{bannerInfo.length == 1}}"></image>
      <view @tap="goRedrect" wx:else>
      <swiper indicator-dots='true' autoplay indicator-color='#d8d8d8' indicator-active-color='#fff'  @change="changeSwiper">
          <swiper-item wx:for="{{bannerInfo}}" wx:for-index="idx" wx:for-item="item" wx:key="idx">
            <!-- <image src="{{item.img_url}}" class="slide-image" ></image> -->
            <view class="slide-image-view"  style="background-image:url({{item.img_url}})"></view>
          </swiper-item>
      </swiper>
      </view>
    </view>
</template>

<style lang="scss">
 .c-banner-wrap{
   width: 100%;
   >view{
     width: 100%;
     height: 100%;
   }
   .img{
     display: block;
     width: 750rpx;
   }
  swiper{
    width: 100%;
    height: 100%;
    swiper-item{
      width: 100%;
      height: 100%;
    }
    .slide-image-view{
      width: 100%;
      background-repeat: no-repeat;
      background-size: cover;
      background-position: center;
    }
    .slide-image{
      width: 100%;
      height: 100%;
    }
  }
 }
</style>

<script>
  import wepy from 'wepy';
  import track from '@/utils/track';
  export default class adBanner extends wepy.component {
    props = {
      bannerInfo: {
        type: Object,
        default: {}
      },
      page:{
        type: '',
        default: 'default'
      }
    }
    data = {
      _idx:0,
      swiperInfo:null
    }

    watch ={}

    methods = {
      changeSwiper (event) {
        var _idx = event.detail.current
        this.swiperInfo = this.bannerInfo[_idx];
        this._idx = _idx
        this.$apply()
      },
      goRedrect () {
        track( `${this.page}_page_ad_swiper_${this._idx}_click` );
        var info = this.swiperInfo || this.bannerInfo[0];
        this.redirect(info)
      },
      goBnner () {
        track( `${this.page}_page_ad_click` );
        this.redirect(this.bannerInfo[0])
      }
    }


    redirect (tplData) {
      switch ( tplData.type ) {
        case 'h5':
          if ( wx.canIUse( 'web-view' ) ) {
            wepy.navigateTo( {
              url: `/pages/webview/webview?h5url=${encodeURIComponent( tplData.landing_path )}`
            } );
          } else {
            wx.showModal( {
              title: '提示',
              content: '您的微信暂不支持该功能，请升级您的微信客户端'
            } );
          }
          break;
        case 'miniprogram':
          if ( wx.canIUse( 'navigateToMiniProgram' ) ) {
            wepy.navigateToMiniProgram( {
              appId: tplData.app_id,
              path: tplData.landing_path,
              success ( res ) {
                // 打开成功
              },
              fail: ( err ) => {
                wx.showModal( {
                  title: '提示',
                  content: err
                } );
              }
            } );
          } else {
            wx.showModal( {
              title: '提示',
              content: '您的微信暂不支持该功能，请升级您的微信客户端'
            } );
          }
          break;
        case 'path':
          var tab = ['index', 'seat', 'self'];
          if ( tab.indexOf( tplData.landing_path.split( '/' )[2] ) > -1 ) {
            wepy.reLaunch( {
              url: tplData.landing_path
            } );
          } else {
            console.log(tplData.landing_path)
            wepy.navigateTo( {
              url: tplData.landing_path
            } );
          }
          break;
      }
    }
  }
</script>
